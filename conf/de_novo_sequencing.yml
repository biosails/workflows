---
global:
    - indir: "data/raw"
    - outdir: "data/analysis"
    - root: "data/raw"
    - root_dir: "data/raw"
    - root_analysis_dir: "data/analysis"
    - analysis: "data/analysis/{$sample}"
    - analysis_dir: "data/analysis/{$sample}"
    - spades_dir: "data/analysis/{$sample}/spades"
    - abyss: "data/analysis/{$sample}/abyss_pe"
    - abyss_dir: "data/analysis/{$sample}/abyss_pe"
    - gapcloser_spades_dir: "data/analysis/{$sample}/gapcloser_spades"
    - gapcloser_abyss_dir: "data/analysis/{$sample}/gapcloser_spades"
    - READ1: "{$self->root_dir}/{$sample}_read1.fastq.gz"
    - READ2: "{$self->root_dir}/{$sample}_read2.fastq.gz"
    - TR1: "{$self->trimmomatic_dir}/{$sample}_read1_trimmomatic"
    - TR2: "{$self->trimmomatic_dir}/{$sample}_read2_trimmomatic"
    - kmer_start: 45
    - kmer_end: 45
    - kmer_step: 1
    - file_rule: (Sample_.*)$
    - by_sample_outdir: 1
    - find_by_dir: 1
    - wait: 0
rules:
    - stash_kmers:
        local:
          - override_process: 1
          - create_outdir: 0
          - verbose: 0
        process: |
                {
                  my @kmers = ();
                  for (my $i = $self->kmer_start; $i <= $self->kmer_end; $i += $self->kmer_step) {
                    push(@kmers, $i);
                  }
                  $self->stash->{kmers} = \@kmers;
                  ($SILENTLY);
                }
    - abyss_pe:
        local:
                - indir: "{$self->root}"
                - before_meta: |
                        HPC DIRECTIVES
                        #
                        #HPC jobname=abyss_pe
                        #HPC module=gencore gencore_dev gencore_de_novo_genomic
                        #HPC mem=45000
                        #HPC walltime=06:00:00
                        #HPC cpus_per_task=8
                        #HPC ntasks=1
                        #HPC commands_per_node=1
                        #
        process: |
                {
                  my @kmers = @{$self->stash->{kmers}};
                  my $indir = $self->indir;
                  my $outdir = $self->outdir;

                  $self->stash->{abyss_assemblies} = [];

                  foreach my $kmer (@kmers){

                  print <<EOF;
                #KMER SIZE $kmer
                #TASK tags=$sample_$kmer
                unset PBS_NODEFILE && \
                mkdir -p $outdir/Abyss_k$kmer && \
                abyss-pe -j 1 \\
                   np=8 \\
                   lib='pe1' \\
                   k=$kmer \\
                   name=Abyss.assembly-k$kmer \\
                   pe1='$indir/$sample\_trimmed_R1_PE.fastq.gz $indir/$sample\_trimmed_R2_PE.fastq.gz' \\
                   se='$indir/$sample\_trimmed_R1_SE.fastq.gz $indir/$sample\_trimmed_R2_SE.fastq.gz' \\
                   --directory=$outdir/Abyss_k$kmer

                EOF

                    my $abyss_assembly = "$self->{abyss_dir}/Abyss_k$kmer/Abyss.assembly-k$kmer-scaffolds.fa";
                    push(@{$self->stash->{abyss_assemblies}}, $abyss_assembly);

                  }
                ($SILENTLY);
                }
    - spades:
        local:
                - indir: "{$self->root}"
                - outdir: "{$self->spades_dir}"
                - before_meta: |
                        HPC DIRECTIVES
                        #
                        #HPC jobname=spades
                        #HPC module=gencore gencore_dev gencore_de_novo_genomic
                        #HPC mem=45000
                        #HPC walltime=06:00:00
                        #HPC cpus_per_task=14
                        #HPC commands_per_node=1
                        #
        process: |
           spades.py \
            -t 14 -m 50 \
            --careful \
            -o  {$self->spades_dir} \
            -1 {$self->indir}/{$sample}_trimmed_R1_PE.fastq.gz \
            -2 {$self->indir}/{$sample}_trimmed_R2_PE.fastq.gz \
            -s {$self->indir}/{$sample}_trimmed_R1_SE.fastq.gz \
            -s {$self->indir}/{$sample}_trimmed_R2_SE.fastq.gz
    - gapcloser_spades:
        local:
                - indir: "{$self->root}"
                - before_meta: |
                        HPC DIRECTIVES
                        #
                        #HPC jobname=gapcloser_spades
                        ##HPC deps=spades
                        #HPC module=gencore gencore_dev gencore_de_novo_genomic
                        #HPC mem=45000
                        #HPC walltime=06:00:00
                        #HPC cpus_per_task=14
                        #HPC commands_per_node=1
                        #
        process: |
            GapCloser \
              -t 14 \
              -l 155 \
              -a {$self->spades_dir}/scaffolds.fasta \
              -b {$self->root_analysis_dir}/gapclose.config \
              -o {$self->outdir}/gapclosed_spades.fasta
    - gapcloser_abyss:
        local:
                - indir: "{$self->root}"
                - before_meta: |
                        HPC DIRECTIVES
                        #
                        #HPC jobname=gapcloser_abyss
                        #HPC deps=abyss_pe
                        #HPC module=gencore gencore_dev gencore_de_novo_genomic
                        #HPC mem=45000
                        #HPC walltime=06:00:00
                        #HPC cpus_per_task=14
                        #HPC commands_per_node=1
                        #
        process: |
                {
                  my @kmers = @{$self->stash->{kmers}};
                  my $indir = $self->indir;
                  my $outdir = $self->outdir;

                  foreach my $kmer (@kmers){
                  print <<EOF;
                #TASK tags=$sample_$kmer
                mkdir -p $self->{outdir}/Abyss_k$kmer && \\
                GapCloser \\
                  -t 14 \\
                  -l 155 \\
                  -a $self->{abyss_dir}/Abyss_k$kmer/Abyss.assembly-k$kmer-scaffolds.fa \\
                  -b $self->{root_analysis_dir}/gapclose.config \\
                  -o $self->{outdir}/Abyss_k$kmer/gapclosed_abyss$kmer.fasta
                EOF
                  }
                ($SILENTLY);
                }
    - quast:
        local:
                - indir: "{$self->root}"
                - before_meta: |
                        HPC DIRECTIVES
                        #
                        #HPC jobname=quast
                        ##HPC deps=gapcloser_spades,gapcloser_abyss
                        #HPC module=gencore gencore_dev gencore_de_novo_genomic
                        #HPC mem=45000
                        #HPC walltime=06:00:00
                        #HPC cpus_per_task=14
                        #HPC commands_per_node=1
                        #
        process: |
          #TASK tags=$sample
          quast -t 14 \
              -o {$self->outdir} \
              -l SPADES,AbySSk45 \
              -s {$self->spades_dir}/scaffolds.fasta {join(" ", @{$self->stash->{abyss_assemblies}})} \
              -f \
                -1 {$self->root_dir}/{$sample}/{$sample}_trimmed_R1_PE.fastq.gz \
                -2 {$self->root_dir}/{$sample}/{$sample}_trimmed_R2_PE.fastq.gz
